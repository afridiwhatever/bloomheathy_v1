{% style %}
  .tabs-container {
    width: 100%;
    max-width: 600px;
    margin: auto;
  }

  .tabs {
    display: flex;
    border-bottom: 2px solid #ddd;
    list-style-type: none;
    padding: 0;
    overflow-x: hidden;
  }

  .tabs .tab-link {
    flex-grow: 1;
    flex-shrink: 1;
    text-align: center;
    padding-block: 10px;
    cursor: pointer;
    border-bottom: 2px solid transparent;
    transition: all 0.3s ease;
  }

  .tabs .tab-link.active {
    border-bottom: 2px solid black;
    font-weight: bold;
  }

  .tab-content {
    display: none;
    padding: 20px 0;
  }

  .tab-content.active {
    display: block;
  }

  .tab-content p {
    line-height: 1.6;
  }

  @media screen and (max-width: 768px) {
    .tabs-container {
      width: 100%;
    }

    .tabs {
      flex-direction: row;
      overflow-x: auto;
    }

    .tabs .tab-link {
      flex-grow: 1;
      padding: 10px 5px;
      font-size: 14px;
    }

    .tab-content {
      padding: 10px 0;
    }
  }
{% endstyle %}

<div {{ block.shopify_attributes }} class="tabs-container">
  <ul class="tabs">
    <li class="tab-link active" data-tab="tab-1">{{ block.settings.tab_1_header }}</li>
    <li class="tab-link" data-tab="tab-2">{{ block.settings.tab_2_header }}</li>
    <li class="tab-link" data-tab="tab-3">{{ block.settings.tab_3_header }}</li>
    <li class="tab-link" data-tab="tab-4">{{ block.settings.tab_4_header }}</li>
  </ul>

  <div id="tab-1" class="accordion__content rte tab-content active">
    <p>{{ block.settings.tab_1_content }}</p>
  </div>

  <div id="tab-2" class="accordion__content rte tab-content">
    <p>{{ block.settings.tab_2_content }}</p>
  </div>

  <div id="tab-3" class="accordion__content rte tab-content">
    <p>{{ block.settings.tab_3_content }}</p>
  </div>

  <div id="tab-4" class="accordion__content rte tab-content">
    <p>{{ block.settings.tab_4_content }}</p>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const tabLinks = document.querySelectorAll('.tab-link');
    const tabContents = document.querySelectorAll('.tab-content');

    // Remove tabs and contents with empty headers or content
    tabLinks.forEach(function (tabLink) {
      const tabHeader = tabLink.textContent.trim();
      const target = tabLink.getAttribute('data-tab');
      const tabContent = document.getElementById(target);

      // Remove tab and content if the header is empty or content is missing/empty
      if (!tabHeader || !tabContent || !tabContent.textContent.trim()) {
        tabLink.remove();
        tabContent?.remove();
      }
    });

    // Update tabLinks and tabContents after potential removals
    const updatedTabLinks = document.querySelectorAll('.tab-link');
    const updatedTabContents = document.querySelectorAll('.tab-content');

    // Set up click events for remaining tabs
    updatedTabLinks.forEach(function (tabLink) {
      tabLink.addEventListener('click', function () {
        const target = this.getAttribute('data-tab');

        // Remove active class from all tabs
        updatedTabLinks.forEach((link) => link.classList.remove('active'));
        updatedTabContents.forEach((content) => content.classList.remove('active'));

        // Add active class to clicked tab and corresponding content
        this.classList.add('active');
        document.getElementById(target).classList.add('active');
      });
    });

    // If no tabs are active initially, activate the first visible tab
    if (!document.querySelector('.tab-link.active') && updatedTabLinks.length > 0) {
      updatedTabLinks[0].classList.add('active');
      const firstTabId = updatedTabLinks[0].getAttribute('data-tab');
      document.getElementById(firstTabId)?.classList.add('active');
    }
  });
</script>
